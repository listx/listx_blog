---
title: "Using MPD for ReplayGain"
tags: linux, audio
---

#+STARTUP: indent showall
#+OPTIONS: ^:nil

Something like ~10 years ago, there was no easy way to apply [[https://en.wikipedia.org/wiki/ReplayGain][ReplayGain]] to various audio files with different formats (e.g., flac vs mp3).
Over the holiday break I discovered [[https://github.com/desbma/r128gain][r128gain]] which is exactly the tool I wanted for many years.
You just run

#+begin_src
r128gain -r <folder>
#+end_src

and it will recursively tag all music files with ReplayGain information --- in parallel, no less!

The only downside is that neither [[https://cmus.github.io/][cmus]] nor [[https://mpv.io/][mpv]] currently support the =R128_TRACK_GAIN= tag that r128gain generates (at least for =*.opus= files).[fn:: To be precise, cmus has a commit in master that [[https://github.com/cmus/cmus/commit/174b93ee1c3a290751513ac557b39dea8e31c7f9][adds support]], and mpv has an [[https://github.com/mpv-player/mpv/issues/5079][open issue]] for it. And I'm too lazy to compile cmus from source.]
However, I discovered that [[https://www.musicpd.org/][MPD (Music Player Daemon)]] supports =R128_TRACK_GAIN=.[fn:: I had actually used MPD back in the day, but switched to cmus because it was simpler. And because cross-format ReplayGain tagging software was not available, MPD's support for ReplayGain wasn't very meaningful for me.]
MPD is easy to start up and the basic minimal configuration was [[https://raw.githubusercontent.com/listx/syscfg/e0f95dd04a4cd7247ca4e0fe3f02eccd78660d24/mpd/mpd.conf][small enough]]:

#+begin_src
music_directory     "~/Music"
# Automatically prune new/deleted files in the music_directory.
auto_update         "yes"

# Allow saving playlists from vimpc.
playlist_directory  "~/Music/playlists"

audio_output {
    type            "pulse"
    name            "My Pulse Output"
}

# Enable replay gain.
replaygain          "track"
#+end_src

As far as actually controlling MPD, I settled on [[https://github.com/boysetsfrog/vimpc][vimpc]] --- because Vi-like keybindings are too good to pass up.

Cheers!
